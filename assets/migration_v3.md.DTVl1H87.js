import{_ as i,c as a,o as n,j as s,U as o,a as h,t as d}from"./chunks/framework.u2_d6vUu.js";const y=JSON.parse('{"title":"Migrate from v2 to v3","description":"","frontmatter":{"title":"Migrate from v2 to v3"},"headers":[],"relativePath":"migration/v3.md","filePath":"migration/v3.md"}'),r={name:"migration/v3.md"},l={id:"frontmatter-title",tabindex:"-1"};function p(e,t,c,k,E,g){return n(),a("div",null,[s("h1",l,[h(d(e.$frontmatter.title)+" ",1),t[0]||(t[0]=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1))]),t[1]||(t[1]=o(`<p>With <code>v3</code> the documentation was changed. You can find the previous version <a href="/nuxt-booster/v2/">here</a>.</p><h2 id="deprecations" tabindex="-1">Deprecations <a class="header-anchor" href="#deprecations" aria-label="Permalink to &quot;Deprecations&quot;">​</a></h2><h3 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Component</th><th></th></tr></thead><tbody><tr><td><code>abstracts/ComponentObserver</code></td><td>replaced with composable <a href="/nuxt-booster/composables/useBoosterComponentObserver.html"><code>useBoosterComponentObserver</code></a></td></tr><tr><td><code>abstracts/AbstractOnlySsr</code></td><td>removed</td></tr></tbody></table><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Option</th><th></th></tr></thead><tbody><tr><td><code>loader</code></td><td>removed</td></tr><tr><td><code>componentAutoImport</code></td><td>removed</td></tr><tr><td><code>componentPrefix</code></td><td>removed</td></tr></tbody></table><h2 id="components-1" tabindex="-1">Components <a class="header-anchor" href="#components-1" aria-label="Permalink to &quot;Components&quot;">​</a></h2><p>Componenten wurden umbenannt.</p><table tabindex="0"><thead><tr><th>Old</th><th>New</th></tr></thead><tbody><tr><td><code>BoosterPicture</code></td><td><code>BoosterPicture</code></td></tr><tr><td><code>BoosterImage</code></td><td><code>BoosterImage</code></td></tr><tr><td><code>BoosterLayer</code></td><td><code>BoosterLayer</code></td></tr><tr><td><code>BoosterIframe</code></td><td><code>BoosterIframe</code></td></tr><tr><td><code>BoosterYoutube</code></td><td><code>BoosterYoutube</code></td></tr><tr><td><code>BoosterVimeo</code></td><td><code>BoosterVimeo</code></td></tr></tbody></table><h3 id="boosterpicture-boosterimage" tabindex="-1"><code>BoosterPicture</code> &amp; <code>BoosterImage</code> <a class="header-anchor" href="#boosterpicture-boosterimage" aria-label="Permalink to &quot;\`BoosterPicture\` &amp; \`BoosterImage\`&quot;">​</a></h3><p>The property <code>loader</code> has been removed.</p><h2 id="directives" tabindex="-1">Directives <a class="header-anchor" href="#directives" aria-label="Permalink to &quot;Directives&quot;">​</a></h2><h3 id="v-font" tabindex="-1"><code>v-font</code> <a class="header-anchor" href="#v-font" aria-label="Permalink to &quot;\`v-font\`&quot;">​</a></h3><p>If the directive <code>v-font</code> is used, the composable <code>useBoosterFont</code> must be used. So that the <code>$getFont</code> function can be provided in the template.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$getFont(…)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$getFont</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBoosterFonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Note that when sub-components are used, the top-level component is given a <code>useCritical</code>. This is necessary so that the <code>critical</code> property is inherited.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useBoosterCritical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>for the use of critical components.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">component</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> critical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,19))])}const u=i(r,[["render",p]]);export{y as __pageData,u as default};
