import{_ as t,c as o,j as e,a as i,t as s,W as n,o as r}from"./chunks/framework.CMpu1raM.js";const k=JSON.parse('{"title":"LoadingSpinner","description":"","frontmatter":{"title":"LoadingSpinner"},"headers":[],"relativePath":"v2/classes/loading-spinner.md","filePath":"v2/classes/loading-spinner.md"}'),d={name:"v2/classes/loading-spinner.md"},c={id:"frontmatter-title",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),h=n('<p>Path: <code>#booster/components/BoosterImage/classes/LoadingSpinner.js</code></p><p>The LoadingSpinner instance describes the visual appearance of the loading state in the <a href="/nuxt-booster/v2/components/booster-image.html"><code>BoosterImage</code></a>. This can be defined globally via the module settings or at the specific components.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LoadingSpinner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({dataUri, size, backgroundColor});</span></span></code></pre></div><h3 id="datauri" tabindex="-1">dataUri <a class="header-anchor" href="#datauri" aria-label="Permalink to &quot;dataUri&quot;">​</a></h3><ul><li>Type: <code>String</code></li></ul><p>Defines the source of the loader. (e.g. <code>@/assets/spinner/three-circles.svg</code>)</p><h3 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size&quot;">​</a></h3><ul><li>Type: <code>String</code></li></ul><p>Defines the size of the loader. Use css <code>background-size</code> definition. (e.g. <code>100px</code>)</p><h3 id="backgroundcolor" tabindex="-1">backgroundColor <a class="header-anchor" href="#backgroundcolor" aria-label="Permalink to &quot;backgroundColor&quot;">​</a></h3><ul><li>Type: <code>String</code></li></ul><p>Defines the background color of the loader. Use css <code>color</code> definition. (e.g. <code>#fff</code>)</p>',12);function p(a,g,u,f,_,m){return r(),o("div",null,[e("h1",c,[i(s(a.$frontmatter.title)+" ",1),l]),h])}const S=t(d,[["render",p]]);export{k as __pageData,S as default};
